{"version":3,"sources":["pages/Admin/Admin.module.scss","components/Settings/Settings.module.scss","http/index.jsx","http/brandAPI.jsx","http/typeAPI.jsx","http/deviceAPI.jsx","http/purchaseAPI.jsx","components/modals/Crud/index.jsx","components/modals/DeviceIssue/index.jsx","components/modals/Crud/CreateBrand/index.jsx","components/modals/Crud/CreateDevice/index.jsx","components/modals/Crud/CreateType/index.jsx","components/modals/Crud/Delete/index.jsx","components/modals/Crud/UpdateBrand/index.jsx","components/modals/Crud/UpdateType/index.jsx","components/modals/Crud/UpdateDevice/index.jsx","pages/Admin/index.jsx","http/cartAPI.jsx","utils/consts.js","assets/fullStar.svg","assets/emptyStar.svg","components/DeviceItem/index.jsx","components/modals/SuccessMessage/index.jsx","pages/Cart/index.jsx","components/Catalog/index.jsx","components/DeviceList.jsx","components/Pages.jsx","pages/Main/index.jsx","http/userAPI.jsx","pages/Auth/index.jsx","pages/Device/index.jsx","components/Settings/index.jsx","pages/CatalogPage/index.jsx","routes.js","pages/Contacts/index.js","pages/Purchases/index.js","components/AppRouter.jsx","assets/shopping_cart.svg","assets/history.svg","assets/contacts.svg","assets/headphones.svg","assets/phone.svg","assets/computer.svg","components/Navigation/index.jsx","App.js","store/UserStore.js","store/DeviceStore.js","store/TypeStore.js","store/BrandStore.js","store/CartStore.js","store/PurchaseStore.js","index.js","pages/Device/Device.module.scss","components/Navigation/Navigation.module.scss","components/DeviceItem/DeviceItem.module.scss","components/Catalog/Catalog.module.scss","pages/Auth/Auth.module.scss"],"names":["module","exports","$host","axios","create","baseURL","process","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","createBrand","brand","a","post","data","deleteBrand","delete","id","updateBrand","put","fetchBrands","get","createType","type","deleteType","updateType","fetchTypes","rateDevice","rating","createDevice","device","deleteDevice","updateDevice","formData","FormData","append","name","price","img","description","brandId","typeId","JSON","stringify","info","stock","fetchDevices","page","limit","minPrice","maxPrice","brands","types","sortOption","isDesc","params","fetchAllDevices","fetchOneDevice","addToPurchase","deviceId","count","updatePurchase","purchase","fetchOnePurchase","fetchPurchases","color","title","update","issue","Crud","observer","show","onHide","changeItem","afterChange","children","setItem","item","crudType","React","useState","uploadStatus","setUploadStatus","useEffect","handleChangeItem","response","message","Modal","size","centered","className","Header","Title","Body","Form","Footer","Button","variant","onClick","DeviceIssue","purchaseKey","setPurchaseKey","setPurchase","isSuccess","setIsSuccess","newPurchaseStatus","setNewPurchaseStatus","setMessage","purchaseField","label","value","user","email","Date","createdAt","toLocaleString","handleFetchPurchase","length","p","isIssued","handleChangeStatus","val","Label","Control","onChange","e","target","placeholder","Alert","map","it","disabled","Check","CreateBrand","updateItem","items","afterUpdate","CreateDevice","useContext","Context","setName","setPrice","setImg","chosenBrand","setChosenBrand","chosenType","setChosenType","setInfo","setDescription","setStock","changeInfo","key","i","Dropdown","Toggle","Menu","t","Item","b","Number","as","console","log","files","Row","Col","md","filter","prev","CreateType","Delete","deleteItem","afterDelete","UpdateBrand","newItem","setNewItem","UpdateType","UpdateDevice","newImage","setNewImage","find","min","Image","height","width","src","URL","createObjectURL","alt","Admin","isLoading","setIsLoading","deviceDeleteVisible","setDeviceDeleteVisible","brandDeleteVisible","setBrandDeleteVisible","typeDeleteVisible","setTypeDeleteVisible","brandUpdateVisible","setBrandUpdateVisible","typeUpdateVisible","setTypeUpdateVisible","deviceUpdateVisible","setDeviceUpdateVisible","brandVisible","setBrandVisible","deviceVisible","setDeviceVisible","typeVisible","setTypeVisible","deviceIssueVisible","setDeviceIssueVisible","setDevices","setTypes","setBrands","fetching","devices","Spinner","Container","styles","back","rows","addToCart","removeFromCart","fetchCart","SHOP_ROUTE","ADMIN_ROUTE","LOGIN_ROUTE","REGISTRATION_ROUTE","DEVICE_ROUTE","CATALOG_ROUTE","DeviceItem","inCart","setInCart","history","useHistory","cart","checkInCart","handleAddToCart","cancelBubble","stopPropagation","toggleItem","push","readonly","initialRating","fullSymbol","fullStar","emptySymbol","emptyStar","toCart","SuccessMessage","to","Cart","loadData","isAuth","newCart","setCart","Promise","all","filteredDevices","cartDevice","c","handleCheckout","forEach","Error","fluid","style","max","CatalogTypes","catalog","catalogItem","DeviceList","Pages","pageCount","setPageCount","pages","setPages","Array","fill","_","Math","ceil","totalCount","Pagination","activeLabel","active","setPage","window","scrollTo","Main","then","setTotalCount","Catalog","registration","password","token","jwt_decode","login","check","Auth","isLogin","useLocation","pathname","setEmail","setPassword","onAuth","setUser","setIsAuth","role","setIsAdmin","alert","Card","auth","confirm","Device","setDevice","rateMessage","setRateMessage","useParams","handleRate","lg","rounded","descriptionBox","OverlayTrigger","placement","delay","hide","overlay","props","Tooltip","toFixed","deviceDescription","descriptionName","descriptionValue","sortOptions","Settings","setLoading","setMinPrice","setMaxPrice","selectedBrands","setSelectedBrands","minRating","setMinRating","setSortOption","setIsDesc","finally","settings","Group","multiple","options","l","selected","values","step","opt","CatalogPage","setTypeId","sm","xs","animation","authRoutes","path","Component","publicRoutes","fetchedPurchase","purchases","purchaseId","sort","r","AppRouter","component","exact","Navigation","Navbar","myNav","expand","Collapse","Nav","Link","href","Brand","cursorPointer","computerIcon","phoneIcon","headphonesIcon","contactsIcon","historyIcon","cartIcon","isAdmin","clearUser","authButton","App","loading","fetchDefault","fetchData","UserStore","this","_isAuth","_user","_isAdmin","makeAutoObservable","clear","DeviceStore","_devices","_typeId","_page","_totalCount","_limit","TypeStore","_types","BrandStore","_brands","CartStore","_cart","PurchaseStore","_purchase","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4e21ccc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Admin_button__2uaUl\",\"back\":\"Admin_back__3rlcF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__34xrk\"};","import axios from 'axios'\r\n\r\nconst $host = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL \r\n})\r\n\r\nconst $authHost = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL ,\r\n})\r\n\r\nconst authInterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`\r\n \r\n    return config\r\n}\r\n$authHost.interceptors.request.use(authInterceptor)\r\n\r\nexport {\r\n    $host, \r\n    $authHost\r\n}","import { $authHost, $host } from \".\";\r\n\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const deleteBrand = async (brand) => {\r\n    const {data} = await $authHost.delete('api/brand', {data: {id: brand.id}})\r\n    return data\r\n}\r\n\r\nexport const updateBrand = async (brand) => {\r\n    const {data} = await $authHost.put('api/brand', {...brand})\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand')\r\n    return data\r\n}\r\n","import { $authHost, $host } from \".\";\r\n\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const deleteType = async (type) => {\r\n    const {data} = await $authHost.delete('api/type', {data: {id: type.id}})\r\n    return data\r\n}\r\n\r\nexport const updateType = async (type) => {\r\n    const {data} = await $authHost.put('api/type', {...type})\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n","import { $authHost, $host } from \".\";\r\n\r\n\r\nexport const rateDevice = async (id, rating) => {\r\n    //console.log(rating);\r\n    const {data} = await $authHost.post(`api/device/rating/${id}`, {rating : rating} ) \r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const deleteDevice = async (device) => {\r\n    const {data} = await $authHost.delete('api/device', {data: {id: device.id}})\r\n    return data\r\n}\r\n\r\nexport const updateDevice = async (device) => {\r\n    const formData = new FormData()\r\n    formData.append('id', device.id)\r\n    formData.append('name', device.name)\r\n    formData.append('price',`${device.price}`)\r\n    formData.append('img', device.img)\r\n    formData.append('description', device.description)\r\n    formData.append('brandId', device.brandId)\r\n    formData.append('typeId',  device.typeId)\r\n    formData.append('info', JSON.stringify(device.info))\r\n    formData.append('stock', `${device.stock}`)\r\n    const {data} = await $authHost.put('api/device', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n    })\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (\r\n    page, \r\n    limit = 5, \r\n    name, \r\n    minPrice, \r\n    maxPrice, \r\n    brands, \r\n    types, \r\n    rating,\r\n    sortOption,\r\n    isDesc\r\n) => {\r\n    const {data} = await $host.get(\r\n        'api/device', \r\n         {params: { \r\n            page, \r\n            limit, \r\n            name, \r\n            minPrice, \r\n            maxPrice, \r\n            brands, \r\n            types, \r\n            rating,\r\n            sortOption,\r\n            isDesc\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchAllDevices = async () => {\r\n    const {data} = await $host.get('api/device/all')\r\n    return data\r\n}\r\n\r\n// export const fetchDevices = async () => {\r\n//     const {data} = await $host.get('api/device')\r\n//     return data\r\n// }\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n","import { $authHost, $host } from \".\";\r\n\r\n\r\nexport const addToPurchase = async (deviceId, count) => {\r\n    const {data} = await $authHost.post('api/purchase', {deviceId, count})\r\n    return data\r\n}\r\n\r\nexport const updatePurchase = async (purchase) => {\r\n    const {data} = await $authHost.put('api/purchase', {...purchase})\r\n    return data\r\n}\r\n\r\nexport const removeFromPurchase = async (deviceId)=>{\r\n    const {data} = await $authHost.delete('api/purchase', {data : {deviceId}})\r\n    return data\r\n}\r\n\r\nexport const fetchOnePurchase = async (id) => {\r\n    const {data} = await $authHost.get('api/purchase/' + id)\r\n    return data\r\n}\r\n\r\nexport const fetchPurchases = async ()=>{\r\n    const {data} = await $authHost.get('api/purchase')\r\n    return data\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Button, Form, Modal, Dropdown, Row } from 'react-bootstrap'\r\n\r\nconst types = {\r\n    create: {color: \"info\", title: \"Создать\"},\r\n    update: {color: \"warning\", title: \"Обновить\"},\r\n    delete: {color: \"danger\", title: \"Удалить\"},\r\n    issue:  {color: \"primary\", title: \"Выдать товар\"},\r\n}\r\n//template func component, for deleting data by requests on server\r\nexport const Crud = observer(({\r\n    show, onHide, changeItem, title, afterChange, children, setItem, item, crudType\r\n}) => {\r\n    const [uploadStatus, setUploadStatus] = React.useState('')\r\n    const type = types[crudType]\r\n\r\n    React.useEffect(()=> {\r\n      if (!show) setUploadStatus('')\r\n    }, [show]) \r\n\r\n    const  handleChangeItem = async () => {\r\n      try {\r\n        setUploadStatus(\"Идет загрузка...\")\r\n        const itemResponse = await changeItem(item)\r\n        setItem(null)\r\n        setUploadStatus(`Информация обновлена! `)\r\n        await afterChange()\r\n      } catch (e) {\r\n        // setUploadStatus(e)\r\n        setUploadStatus(e.response?.data.message)\r\n      }\r\n    } \r\n\r\n    return (\r\n        <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        centered\r\n        className=\"\"\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {type.title} {title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                {children}\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <p>\r\n              {uploadStatus}    \r\n          </p>\r\n            <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n            <Button variant={type.color} onClick={() =>handleChangeItem()}>{type.title}</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport { Alert, Button, Dropdown, Form } from 'react-bootstrap'\r\nimport { fetchOnePurchase, updatePurchase } from '../../../http/purchaseAPI'\r\nimport { Crud } from '../Crud'\r\n\r\n\r\n\r\n\r\nexport const DeviceIssue = ({show, onHide}) => {\r\n    const [purchaseKey, setPurchaseKey] = React.useState('') \r\n    const [purchase, setPurchase] = React.useState()\r\n    const [isSuccess, setIsSuccess] = React.useState(false)\r\n    const [newPurchaseStatus, setNewPurchaseStatus] = React.useState(false)\r\n\r\n    const [message, setMessage] = React.useState('')\r\n\r\n    const purchaseField = [\r\n        { label: 'Почта покупателя', value: purchase?.user?.email },\r\n        { label: 'Название устройства', value: purchase?.device?.name },\r\n        { label: 'Количество устройств', value: purchase?.count },\r\n        { label: 'Дата заказа', value: new Date(purchase?.createdAt).toLocaleString() },\r\n    ]\r\n\r\n    React.useEffect(()=>{\r\n        if (isSuccess) {\r\n            setPurchase()\r\n        }\r\n    },[isSuccess])\r\n\r\n\r\n    const  handleFetchPurchase = async () => {\r\n        setIsSuccess(false)\r\n        setPurchase()\r\n        if (!purchaseKey.length) return setMessage('Вы не ввели код покупки!')\r\n        const p = await fetchOnePurchase(purchaseKey)\r\n        if (!p) return setMessage('Не удалось найти покупку с данным кодом!')\r\n        if (p.isIssued) return setMessage('Данный товар уже выдан!')\r\n        setPurchase(p)\r\n        setMessage('')\r\n    }\r\n\r\n    const  handleChangeStatus = async (p) => {\r\n        if (newPurchaseStatus !== true) {\r\n            setMessage('Вы не изменили статус заказа!')\r\n            return\r\n        }\r\n        await updatePurchase(p)\r\n    }\r\n\r\n    return (\r\n        <Crud\r\n            show={show} \r\n            onHide={onHide} \r\n            changeItem={handleChangeStatus} \r\n            afterChange={()=>setIsSuccess(true)} \r\n            item={{...purchase, isIssued: newPurchaseStatus}}\r\n            setItem={(val) => { setPurchase(val); setNewPurchaseStatus(false) }}\r\n            crudType=\"issue\"\r\n        >\r\n            <Form.Label>\r\n                Код покупки\r\n            </Form.Label>\r\n            <Form.Control\r\n                value={purchaseKey}\r\n                onChange={(e) => setPurchaseKey(e.target.value)}\r\n                placeholder={ `Введите код покупки...`} \r\n            >\r\n            </Form.Control>\r\n            <Button \r\n                className=\"mt-2\"\r\n                onClick={handleFetchPurchase}\r\n                variant=\"info\"\r\n            >\r\n                Найти покупку\r\n            </Button>\r\n            <hr/>\r\n            {isSuccess&&!message.length\r\n            &&  <Alert variant=\"success\">\r\n                    Товар успешно выдан!\r\n                </Alert>\r\n            }\r\n\r\n            {purchase \r\n            &&  \r\n            <>\r\n                {purchaseField.map((item, it) => \r\n                    <div key={it}>\r\n                        <Form.Label>{item.label}</Form.Label>\r\n                        <Form.Control disabled value={item.value} />\r\n                    </div>\r\n                )}\r\n\r\n                <hr/>\r\n               \r\n                <Form.Check\r\n                    className=\"mt-2 text-primary\"\r\n                    type='checkbox'\r\n                    label={`Товар выдан`}\r\n                    size=\"lg\"\r\n                    id=\"issueCheck\"\r\n                    value={newPurchaseStatus}\r\n                    onClick={()=>setNewPurchaseStatus(true) }\r\n                />\r\n                \r\n            </>\r\n            }\r\n\r\n            {message \r\n            && <Alert className=\"mt-2\" variant=\"warning\">{message}</Alert>\r\n            }\r\n        </Crud>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button, Form, Modal, Dropdown, Row } from 'react-bootstrap'\r\nimport { Crud } from '..'\r\n\r\nexport const CreateBrand = ({show, onHide, updateItem, items, title, afterUpdate}) => {\r\n    const [item, setItem] = React.useState(\"\")\r\n    \r\n    return (\r\n        <Crud \r\n            show={show} \r\n            onHide={onHide} \r\n            changeItem={updateItem} \r\n            title={title} \r\n            afterChange={afterUpdate} \r\n            item={{name: item}}\r\n            setItem={(val) => setItem(val) }\r\n            crudType=\"create\"\r\n        >\r\n             <Form.Control\r\n                    value={item}\r\n                    onChange={(e) => setItem(e.target.value)}\r\n                    placeholder={\"Введите бренд...\"} \r\n                />    \r\n        </Crud>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, Button, Dropdown, Row, Col } from 'react-bootstrap'\r\nimport { Crud } from '..'\r\nimport { Context } from '../../../..'\r\n\r\nexport const CreateDevice = ({show, onHide, updateItem, items, title, afterUpdate}) => {\r\n    const {brand, type} = React.useContext(Context)\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [price, setPrice] = React.useState(0)\r\n    const [img, setImg] = React.useState(null)\r\n    const [chosenBrand, setChosenBrand] = React.useState({})\r\n    const [chosenType, setChosenType] = React.useState({})\r\n    const [info, setInfo] = React.useState([])\r\n    const [description, setDescription] = React.useState('')\r\n    const [stock, setStock] = React.useState(1)\r\n\r\n    const addInfo=() => {\r\n        setInfo(prev => [...prev, {title:'', description:'', id: prev.length }])\r\n    }\r\n\r\n    const removeInfo = (id) => {\r\n        setInfo(info.filter(val => val.id !== id))\r\n    }\r\n\r\n    const changeInfo = (key, value, id) => {\r\n        setInfo(info.map(i => i.id === id ? {...i, [key]:value}: i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setImg(e.target.files[0])\r\n    }\r\n\r\n    const changeStock = e => {\r\n        let value = Number(e.target.value)\r\n        console.log(value);\r\n        if (value < 0) {\r\n            value = 0\r\n        }\r\n        setStock(value)\r\n    }\r\n\r\n    const clearAll = () => {\r\n        setName('')\r\n        setPrice(0)\r\n        setImg(null)\r\n        setChosenBrand({})\r\n        setChosenType({})\r\n        setInfo([])\r\n        setStock(1)\r\n        setDescription('')\r\n    }\r\n\r\n    const getItem = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price',`${price}`)\r\n        formData.append('description', description)\r\n        formData.append('img', img)\r\n        formData.append('brandId', chosenBrand.id)\r\n        formData.append('typeId',  chosenType.id)\r\n        formData.append('stock',  stock)\r\n        formData.append('info', JSON.stringify(info))\r\n        return formData\r\n    }\r\n    return (\r\n        <Crud \r\n            show={show} \r\n            onHide={onHide} \r\n            changeItem={updateItem} \r\n            title={title} \r\n            afterChange={afterUpdate} \r\n            item={getItem()}\r\n            setItem={clearAll}\r\n            crudType=\"create\"\r\n        >\r\n             <Dropdown className=\"mt-2\">\r\n                    <Dropdown.Toggle>{chosenType.name || 'Выберите тип'}  </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        {type.types.map((t) => \r\n                            <Dropdown.Item \r\n                                key={t.id}\r\n                                onClick={() => setChosenType({id:t.id, name:t.name})}\r\n                            >\r\n                                {t.name}\r\n                            </Dropdown.Item>\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown className=\"mt-2\">\r\n                    <Dropdown.Toggle>{chosenBrand.name || 'Выберите бренд'}  </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        {brand.brands.map((b) => \r\n                            <Dropdown.Item \r\n                                key={b.id}\r\n                                onClick={() => setChosenBrand({id:b.id, name:b.name})}\r\n\r\n                            >\r\n                                {b.name}\r\n                            </Dropdown.Item>\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Form.Label  className=\"mt-2 d-block\">Название</Form.Label>    \r\n                <Form.Control\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    className=\"mt-2\"\r\n                    placeholder={\"Введите название устройства...\"} \r\n                />    \r\n                <Form.Label  className=\"d-block\">Цена</Form.Label>   \r\n                <Form.Control\r\n                    value={price}\r\n                    onChange={(e) => setPrice(Number(e.target.value))}\r\n                    className=\"mt-2\"\r\n                    placeholder={\"Введите стоимость устройства...\"} \r\n                    type=\"number\"\r\n                />\r\n                <Form.Label  className=\"d-block\">Описание</Form.Label>   \r\n                <Form.Control\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    className=\"mt-2\"\r\n                    as=\"textarea\"\r\n                    placeholder={\"Введите описание устройства...\"} \r\n\r\n                />\r\n                <Form.Label  className=\"d-block\">Количество устройств</Form.Label>   \r\n                <Form.Control\r\n                    value={stock}\r\n                    onChange={changeStock}\r\n                    className=\"mt-2\"\r\n                    type=\"number\"\r\n                    placeholder={\"Введите количество устройств на складе...\"} \r\n\r\n                />\r\n                <Form.Label  className=\"d-block\">Изображение устройства</Form.Label>    \r\n                <Form.Control\r\n                    onChange={selectFile}\r\n                    className=\"d-block\"\r\n                    placeholder={\"Изображение...\"}\r\n                    type=\"file\"\r\n                />   \r\n              \r\n                {info.map(i => \r\n                    <Row key={i.id} className=\"mt-2\">\r\n                        <Col md={4}>\r\n                            <Form.Control\r\n                                value={i.title}\r\n                                onChange={(e) => changeInfo('title', e.target.value, i.id)}\r\n                                placeholder=\"Введите название \"\r\n                            />   \r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Control\r\n                                value={i.description}\r\n                                onChange={(e) => changeInfo('description', e.target.value, i.id)}\r\n                                placeholder=\"Введите описание \"\r\n                            />   \r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Button \r\n                                variant=\"outline-danger\"\r\n                               \r\n                                onClick={() => removeInfo(i.id)}\r\n                            >\r\n                                Удалить\r\n                            </Button> \r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n\r\n                <Button \r\n                    variant=\"outline-dark mt-2\"\r\n                    onClick={addInfo}\r\n                >\r\n                    Добавить новое свойтсво\r\n                </Button>\r\n\r\n        </Crud>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { Crud } from '..'\r\n\r\nexport const CreateType = ({show, onHide, updateItem, items, title, afterUpdate}) => {\r\n    const [item, setItem] = React.useState(\"\")\r\n\r\n    return (\r\n        <Crud \r\n            show={show} \r\n            onHide={onHide} \r\n            changeItem={updateItem} \r\n            title={title} \r\n            afterChange={afterUpdate} \r\n            item={{name: item}}\r\n            setItem={(val) =>setItem(val)}\r\n            crudType=\"create\"\r\n        >\r\n             <Form.Control\r\n                    value={item}\r\n                    onChange={(e) => setItem(e.target.value)}\r\n                    placeholder={\"Введите тип...\"} \r\n                />    \r\n        </Crud>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Button, Form, Modal, Dropdown, Row } from 'react-bootstrap'\r\nimport { Crud } from '..'\r\n\r\n//template func component, for deleting data by requests on server\r\nexport const Delete = observer(({show, onHide, deleteItem, items, title, afterDelete}) => {\r\n\r\n    const [item, setItem] = React.useState({})\r\n    const [uploadStatus, setUploadStatus] = React.useState('')\r\n\r\n    React.useEffect(()=> {\r\n      if (!show) setUploadStatus('')\r\n    }, [show]) \r\n\r\n    return (\r\n        <Crud\r\n            show={show} \r\n            onHide={onHide} \r\n            changeItem={deleteItem} \r\n            title={title} \r\n            afterChange={afterDelete} \r\n            item={item}\r\n            setItem={setItem}\r\n            crudType=\"delete\"\r\n        >\r\n            <Dropdown className=\"mt-2\">\r\n                <Dropdown.Toggle>{item?.name || `Выберите ${title}`}  </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {items.map((i) => \r\n                        <Dropdown.Item \r\n                            key={i.id}\r\n                            onClick={() => setItem({id:i.id, name:i.name})}\r\n                        >\r\n                            {i.name}\r\n                        </Dropdown.Item>\r\n                    )}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n      </Crud>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport { Button, Form, Modal, Dropdown, Row } from 'react-bootstrap'\r\nimport { Crud } from '..'\r\n\r\nexport const UpdateBrand = ({show, onHide, updateItem, items, title, afterUpdate}) => {\r\n    const [item, setItem] = React.useState({})\r\n    const [newItem, setNewItem] = React.useState(\"\")\r\n\r\n    return (\r\n        <Crud \r\n            show={show} \r\n            onHide={onHide} \r\n            changeItem={updateItem} \r\n            title={title} \r\n            afterChange={afterUpdate} \r\n            item={{...item, name: newItem}}\r\n            setItem={(val) => { setItem(val); setNewItem(\"\") }}\r\n            crudType=\"update\"\r\n        >\r\n            <Dropdown className=\"mt-2\">\r\n                <Dropdown.Toggle>{item?.name || `Выберите ${title}`}  </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {items.map((i) => \r\n                        <Dropdown.Item \r\n                            key={i.id}\r\n                            onClick={() => setItem(i)}\r\n                        >\r\n                            {i.name}\r\n                        </Dropdown.Item>\r\n                    )}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <h4 className=\"mt-2\" > Изменить на: </h4>\r\n            <Form.Control\r\n                value={newItem}\r\n                onChange={(e) => setNewItem(e.target.value)}\r\n                placeholder={`Введите ${title}...`} \r\n            />    \r\n        </Crud>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Modal, Dropdown, Row } from 'react-bootstrap'\r\nimport { Crud } from '..'\r\n\r\nexport const UpdateType = ({show, onHide, updateItem, items, title, afterUpdate}) => {\r\n    const [item, setItem] = React.useState({})\r\n    const [newItem, setNewItem] = React.useState(\"\")\r\n\r\n    return (\r\n        <Crud \r\n            show={show} \r\n            onHide={onHide} \r\n            changeItem={updateItem} \r\n            title={title} \r\n            afterChange={afterUpdate} \r\n            item={{...item, name: newItem}}\r\n            setItem={(val) => { setItem(val); setNewItem(\"\") }}\r\n            crudType=\"update\"\r\n        >\r\n            <Dropdown className=\"mt-2\">\r\n                <Dropdown.Toggle>{item?.name || `Выберите ${title}`}  </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {items.map((i) => \r\n                        <Dropdown.Item \r\n                            key={i.id}\r\n                            onClick={() => setItem(i)}\r\n                        >\r\n                            {i.name}\r\n                        </Dropdown.Item>\r\n                    )}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <h4 className=\"mt-2\" > Изменить на: </h4>\r\n            <Form.Control\r\n                value={newItem}\r\n                onChange={(e) => setNewItem(e.target.value)}\r\n                placeholder={ `Введите ${title}...`} \r\n            />    \r\n        </Crud>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Modal, Dropdown, Row, Col } from 'react-bootstrap'\r\nimport { Crud } from '..'\r\nimport Image from 'react-bootstrap/esm/Image'\r\n\r\nexport const UpdateDevice = ({show, onHide, updateItem, items, brands = [], types = [], title, afterUpdate}) => {\r\n    const [item, setItem] = React.useState()\r\n    const [newImage, setNewImage] = React.useState(null)\r\n    const getTypeFromTypeId = (typeId) => {\r\n        const {name} = types.find((type) => type.id === typeId)\r\n        return name\r\n    }\r\n\r\n    const getBrandFromId = (brandId) => {\r\n        const { name } = brands?.find((brand)=> brand.id === brandId)\r\n        return name\r\n    }\r\n\r\n    const addInfo=() => {\r\n        setItem( prev => \r\n            { return {\r\n                ...prev, \r\n                info: [...item.info, {title:'', description:'', id: item.info.length }]\r\n            }})\r\n    }\r\n\r\n    const removeInfo = (id) => {\r\n        setItem( prev => \r\n            { return {\r\n                ...prev, \r\n                info: item.info\r\n                        .filter(val => val.id !== id)\r\n                        .map((val, it) => {return {...val, id: it}})\r\n            }})\r\n    }\r\n\r\n    const changeInfo = (key, value, id) => {\r\n        setItem( prev => \r\n            { return {\r\n                ...prev, \r\n                info: item.info.map(i => i.id === id ? {...i, [key]:value}: i)\r\n            }})\r\n    }\r\n    console.log({...item, ...(newImage&&{img: newImage})});\r\n    return (\r\n        <Crud \r\n            show={show} \r\n            onHide={onHide} \r\n            changeItem={updateItem} \r\n            title={title} \r\n            afterChange={afterUpdate} \r\n            item={{...item, ...(newImage&&{img: newImage})}}\r\n            setItem={setItem}\r\n            crudType=\"update\"\r\n        >\r\n            <h5>Выберете устройство, которое хотите обновить</h5>\r\n            <Dropdown className=\"mt-2\">\r\n                <Dropdown.Toggle>{item?.name || `Выберите ${title}`}  </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {items.map((i) => \r\n                        <Dropdown.Item \r\n                            key={i.id}\r\n                            onClick={() => setItem(i)}\r\n                        >\r\n                            {i.name}\r\n                        </Dropdown.Item>\r\n                    )}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <h5 className=\"mt-3 mb-0\">Свойства устройства:</h5>\r\n            {item\r\n            && <Row className=\"w-50 mx-auto\">\r\n                <div className=\"d-flex  justify-content-between\">\r\n                    <b className=\"mt-auto\">Тип: </b>\r\n                    <Dropdown className=\"mt-2\">\r\n                        <Dropdown.Toggle>{item.typeId? getTypeFromTypeId(item?.typeId) : 'Выберите тип'}  </Dropdown.Toggle>\r\n                        <Dropdown.Menu   >\r\n                            {types.map((t) => \r\n                                <Dropdown.Item \r\n                                    key={t.id}\r\n                                    onClick={()=>setItem(prev =>{ return {...prev, typeId: t.id}})}\r\n                                >\r\n                                    {t.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\" d-flex mb-2 justify-content-between\">\r\n                    <b className=\"mt-auto\">Бренд: </b>\r\n                    <Dropdown className=\"mt-2\">\r\n                        <Dropdown.Toggle >{item.brandId? getBrandFromId(item?.brandId) : 'Выберите бренд'}  </Dropdown.Toggle>\r\n                        <Dropdown.Menu   >\r\n                            {brands.map((b) => \r\n                                <Dropdown.Item \r\n                                    key={b.id}\r\n                                    onClick={()=>setItem(prev =>{ return {...prev, brandId: b.id}})}\r\n                                >\r\n                                    {b.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"d-flex mb-2 justify-content-between\">\r\n                    <b className=\"mt-auto me-5\">Название: </b>\r\n                    <Form.Control\r\n                        className=\"w-50\"\r\n                        value={item.name}\r\n                        onChange={(e) => setItem(prev => {return {...prev, name: e.target.value}})}\r\n                        placeholder={\"Введите бренд...\"} \r\n                    />    \r\n                </div>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <b className=\"mt-auto me-5\">Цена: </b>\r\n                    <Form.Control\r\n                        className=\"w-50\"\r\n                        value={item.price}\r\n                        onChange={(e) => setItem(prev => {return {...prev, price: e.target.value}})}\r\n                        placeholder={\"Введите цену...\"} \r\n                    />    \r\n                </div>\r\n                <div className=\"d-flex justify-content-between\">\r\n                <b className=\"mt-auto me-5\">Описание устройства </b>\r\n                <Form.Control\r\n                    value={item.description}\r\n                    onChange={(e) => setItem(prev => {return {...prev, description: e.target.value}})}\r\n                    className=\"mt-2\"\r\n                    as=\"textarea\"\r\n                    placeholder={\"Введите описание устройства...\"} \r\n\r\n                />\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-between mt-2\">\r\n                    <b className=\"mt-auto me-5\">Количество усройств </b>\r\n                    <Form.Control\r\n                        className=\"w-50\"\r\n                        value={item.stock}\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        onChange={(e) => setItem(prev => {return {...prev, stock: e.target.value}})}\r\n                        placeholder={\"Введите количество устройств...\"} \r\n                    />    \r\n                </div>\r\n               \r\n                <div className=\"d-flex mt-2 justify-content-between\">\r\n                <b className=\"mt-auto me-5\">Изображение устройства: </b>\r\n                <Form.Control\r\n                    onChange={e => setNewImage(e.target.files[0]) }\r\n                    className=\"d-block\"\r\n                    placeholder={\"Изображение...\"}\r\n                    type=\"file\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <Image \r\n                className=\"d-flex ms-auto\"\r\n                height={100}\r\n                width=\"auto\"\r\n                src={ newImage\r\n                    ? URL.createObjectURL(newImage)\r\n                    : process.env.REACT_APP_API_URL + item.img} \r\n                alt=\"Device\" \r\n                />    \r\n                </div>\r\n                \r\n                <h6 className=\"mt-4\"><b>Характеристики: </b></h6>\r\n                {item.info.map(i => \r\n                    <Row key={i.id} className=\"mt-2\">\r\n                        <Col md={4}>\r\n                            <Form.Control\r\n                                value={i.title}\r\n                                onChange={(e) => changeInfo('title', e.target.value, i.id)}\r\n                                placeholder=\"Введите название \"\r\n                            />   \r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Control\r\n                                value={i.description}\r\n                                onChange={(e) => changeInfo('description', e.target.value, i.id)}\r\n                                placeholder=\"Введите описание \"\r\n                            />   \r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Button \r\n                                variant=\"outline-danger\"\r\n                                onClick={() => removeInfo(i.id)}\r\n                            >\r\n                                Удалить\r\n                            </Button> \r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n                <Button \r\n                    variant=\"outline-dark mt-2\"\r\n                    onClick={addInfo}\r\n                >\r\n                    Добавить новое свойтсво\r\n                </Button>   \r\n              \r\n            </Row>\r\n            }\r\n        </Crud>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/esm/Button'\r\nimport Container from 'react-bootstrap/esm/Container'\r\nimport { createBrand, deleteBrand, fetchBrands, updateBrand } from '../../http/brandAPI'\r\nimport { Context } from '../..'\r\nimport { observer } from 'mobx-react-lite'\r\nimport styles from './Admin.module.scss'\r\nimport { createType, deleteType, fetchTypes, updateType } from '../../http/typeAPI'\r\nimport { createDevice, deleteDevice, fetchAllDevices, fetchDevices, updateDevice } from '../../http/deviceAPI'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { DeviceIssue } from '../../components/modals/DeviceIssue'\r\nimport { CreateBrand } from '../../components/modals/Crud/CreateBrand'\r\nimport { CreateDevice } from '../../components/modals/Crud/CreateDevice'\r\nimport { CreateType } from '../../components/modals/Crud/CreateType'\r\n\r\nimport { Delete } from '../../components/modals/Crud/Delete'\r\n\r\nimport { UpdateBrand } from '../../components/modals/Crud/UpdateBrand'\r\nimport { UpdateType } from '../../components/modals/Crud/UpdateType'\r\nimport { UpdateDevice } from '../../components/modals/Crud/UpdateDevice'\r\n\r\nconst Admin = observer(() => {\r\n    \r\n    const [isLoading, setIsLoading] = React.useState(true)\r\n   \r\n    //delete actions\r\n    const [deviceDeleteVisible, setDeviceDeleteVisible] = React.useState(false)\r\n    const [brandDeleteVisible, setBrandDeleteVisible] = React.useState(false)\r\n    const [typeDeleteVisible, setTypeDeleteVisible] = React.useState(false)\r\n   \r\n    //update actions\r\n    const [brandUpdateVisible, setBrandUpdateVisible] = React.useState(false)\r\n    const [typeUpdateVisible, setTypeUpdateVisible] = React.useState(false)\r\n    const [deviceUpdateVisible, setDeviceUpdateVisible] = React.useState(false)\r\n    \r\n    //creation actions\r\n    const [brandVisible, setBrandVisible] = React.useState(false)\r\n    const [deviceVisible, setDeviceVisible] = React.useState(false)\r\n    const [typeVisible, setTypeVisible] = React.useState(false)\r\n\r\n    const [deviceIssueVisible, setDeviceIssueVisible] = React.useState(false)\r\n\r\n    const {brand, type, device} = React.useContext(Context)\r\n    \r\n\r\n    React.useEffect(()=>{\r\n        const fetching = async () => {\r\n            setIsLoading(true)\r\n            device.setDevices((await fetchAllDevices()))\r\n            type.setTypes(await fetchTypes())\r\n            brand.setBrands(await fetchBrands())\r\n            setIsLoading(false)\r\n        }\r\n        fetching()\r\n    },[])\r\n    console.log(device.devices);\r\n    if (isLoading) return <Spinner />\r\n    return (\r\n        <Container className=\"pt-5\"  >\r\n            <div className={`mx-auto d-flex w-50 flex-column align-items-center p-4 ${styles.back}`}>\r\n                <h3>Панель администратора</h3>\r\n                    <Button  \r\n                        variant=\"primary\"\r\n                        className={`mt-3 w-100 `} \r\n                        onClick={() => setDeviceIssueVisible(true)}\r\n                    >\r\n                        Выдача товаров \r\n                    </Button>\r\n\r\n                <hr />\r\n\r\n                    <Button \r\n                        variant=\"info\"\r\n                        className={`mt-3 w-100`} \r\n                        onClick={() => setDeviceVisible(true)}\r\n                    >\r\n                        Добавить устройство\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"info\"\r\n                        className={`mt-3 w-100`}  \r\n                        onClick={() => setTypeVisible(true)}\r\n                    >\r\n                        Добавить тип\r\n                    </Button>\r\n                    <Button  \r\n                        variant=\"info\"\r\n                        className={`mt-3 w-100`}  \r\n                        onClick={() => setBrandVisible(true)}\r\n                    >\r\n                        Добавить бренд\r\n                    </Button>\r\n\r\n                <hr/>\r\n                \r\n                    <Button  \r\n                        variant=\"warning\"\r\n                        className={`mt-3 w-100 `} \r\n                        onClick={() => setDeviceUpdateVisible(true)}\r\n                    >\r\n                        Обновить устройство\r\n                    </Button>\r\n                    <Button  \r\n                        variant=\"warning\"\r\n                        className={`mt-3 w-100 `} \r\n                        onClick={() => setTypeUpdateVisible(true)}\r\n                    >\r\n                        Обновить тип\r\n                    </Button>\r\n                    <Button  \r\n                        variant=\"warning\"\r\n                        className={`mt-3 w-100 `} \r\n                        onClick={() => setBrandUpdateVisible(true)}\r\n                    >\r\n                        Обновить бренд\r\n                    </Button>\r\n\r\n                <hr/>\r\n\r\n                    <Button  \r\n                        variant=\"danger\"\r\n                        className={`mt-3 w-100 `} \r\n                        onClick={() => setDeviceDeleteVisible(true)}\r\n                    >\r\n                        Удалить устройство\r\n                    </Button>\r\n                    <Button  \r\n                        variant=\"danger\"\r\n                        className={`mt-3 w-100 `} \r\n                        onClick={() => setTypeDeleteVisible(true)}\r\n                    >\r\n                        Удалить тип\r\n                    </Button>\r\n                    <Button  \r\n                        variant=\"danger\"\r\n                        className={`mt-3 w-100 `} \r\n                        onClick={() => setBrandDeleteVisible(true)}\r\n                    >\r\n                        Удалить бренд\r\n                    </Button>\r\n\r\n                <DeviceIssue \r\n                    show={deviceIssueVisible}\r\n                    onHide={() => setDeviceIssueVisible(false) }\r\n                />\r\n\r\n                <CreateDevice \r\n                    show={deviceVisible} \r\n                    onHide={() => setDeviceVisible(false)}\r\n                    title=\"Устройство\"\r\n                    updateItem={(device)=> createDevice(device)}\r\n                    afterUpdate={async () => device.setDevices(await fetchAllDevices())}\r\n                />\r\n\r\n                <CreateBrand \r\n                    show={brandVisible} \r\n                    onHide={() => setBrandVisible(false)}\r\n                    title=\"Бренд\"\r\n                    items={brand.brands}\r\n                    updateItem={(brand)=> createBrand(brand)}\r\n                    afterUpdate={async () => brand.setBrands(await fetchBrands())}\r\n                />\r\n                <CreateType\r\n                    show={typeVisible} \r\n                    onHide={() => setTypeVisible(false)}\r\n                    title=\"Тип\"\r\n                    items={type.types}\r\n                    updateItem={(type)=> createType(type)}\r\n                    afterUpdate={async () => type.setTypes(await fetchTypes())}\r\n                />\r\n\r\n                <UpdateDevice \r\n                    title=\"Устройство\"\r\n                    show={deviceUpdateVisible} \r\n                    onHide={()=>setDeviceUpdateVisible(false)} \r\n                    items={device.devices}\r\n                    updateItem={(device)=> updateDevice(device)}\r\n                    afterUpdate={async () => device.setDevices(await fetchAllDevices())}\r\n                    brands={brand.brands}\r\n                    types={type.types}\r\n                />\r\n\r\n                <UpdateBrand \r\n                    title=\"Бренд\"\r\n                    show={brandUpdateVisible} \r\n                    onHide={()=>setBrandUpdateVisible(false)} \r\n                    items={brand.brands}\r\n                    updateItem={(brand)=> updateBrand(brand)}\r\n                    afterUpdate={async () => brand.setBrands(await fetchBrands())}\r\n                />\r\n\r\n                <UpdateType \r\n                    title=\"Тип\"\r\n                    show={typeUpdateVisible} \r\n                    onHide={()=>setTypeUpdateVisible(false)} \r\n                    items={type.types}\r\n                    updateItem={(type)=> updateType(type)}\r\n                    afterUpdate={async () => type.setTypes(await fetchTypes())}\r\n                />\r\n        \r\n                \r\n                <Delete \r\n                    title=\"Бренд\"\r\n                    show={brandDeleteVisible} \r\n                    onHide={()=>setBrandDeleteVisible(false)} \r\n                    items={brand.brands}\r\n                    deleteItem={(name)=> deleteBrand(name)}\r\n                    afterDelete={async () => brand.setBrands(await fetchBrands())}\r\n                />\r\n                <Delete \r\n                    title=\"Тип\"\r\n                    show={typeDeleteVisible} \r\n                    onHide={()=>setTypeDeleteVisible(false)} \r\n                    items={type.types}\r\n                    deleteItem={(type)=> deleteType(type)}\r\n                    afterDelete={async () => type.setTypes(await fetchTypes())}\r\n                />\r\n                <Delete \r\n                    title=\"Устройство\"\r\n                    show={deviceDeleteVisible} \r\n                    onHide={()=>setDeviceDeleteVisible(false)} \r\n                    items={device.devices}\r\n                    deleteItem={(device)=> deleteDevice(device)}\r\n                    afterDelete={async () => device.setDevices((await fetchDevices()).rows)}\r\n                />\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Admin\r\n\r\n","import { $authHost, $host } from \".\";\r\n\r\n\r\nexport const addToCart = async (deviceId) => {\r\n    //console.log(\"addToCart\" + deviceId);\r\n    const {data} = await $authHost.post('api/cart', {deviceId})\r\n    return data\r\n}\r\n\r\nexport const removeFromCart = async (deviceId)=>{\r\n    const {data} = await $authHost.delete('api/cart', {data : {deviceId}})\r\n    return data\r\n}\r\n\r\nexport const fetchCart = async ()=>{\r\n    const {data} = await $authHost.get('api/cart')\r\n    return data\r\n}\r\n\r\n\r\n","export const SHOP_ROUTE = '/'\r\nexport const ADMIN_ROUTE = '/admin'\r\nexport const LOGIN_ROUTE = '/login'\r\nexport const REGISTRATION_ROUTE = '/registration'\r\nexport const CART_ROUTE = '/cart'\r\nexport const DEVICE_ROUTE = '/device'\r\nexport const CATALOG_ROUTE = '/catalog'\r\nexport const CONTACTS_ROUTE = '/contacts'\r\nexport const PURCHASES_ROUTE = '/purchases'\r\n","export default __webpack_public_path__ + \"static/media/fullStar.830ac747.svg\";","export default __webpack_public_path__ + \"static/media/emptyStar.e2e2a7a5.svg\";","import React, { useContext } from 'react'\r\nimport Button from 'react-bootstrap/esm/Button'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { DEVICE_ROUTE } from '../../utils/consts'\r\n\r\nimport Rating from 'react-rating'\r\nimport fullStar from '../../assets/fullStar.svg'\r\nimport emptyStar from '../../assets/emptyStar.svg'\r\nimport styles from './DeviceItem.module.scss'\r\nimport Image from 'react-bootstrap/esm/Image'\r\nimport { addToCart, fetchCart, removeFromCart } from '../../http/cartAPI'\r\nimport { Context } from '../..'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { rateDevice } from '../../http/deviceAPI'\r\n\r\nexport const DeviceItem = observer(({device}) => {\r\n\r\n    const [inCart, setInCart] = React.useState(false)\r\n\r\n    const history = useHistory()\r\n    const {cart} = useContext(Context)\r\n    \r\n    React.useEffect(()=>{\r\n       setInCart(cart.checkInCart(device.id))\r\n    },[cart, cart.cart, device])\r\n\r\n    const handleAddToCart = async (e) => {\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n        cart.toggleItem(device.id)\r\n    }\r\n\r\n    const cancelBubble = (e) => {\r\n        e.cancelBubble = true;\r\n        if (e.stopPropagation) e.stopPropagation();\r\n    }\r\n\r\n    const handleChangeRoute = (e) => {\r\n        history.push(`${DEVICE_ROUTE}/${device.id}`)\r\n    }\r\n\r\n    return (\r\n        <div \r\n        onClick={(e) => handleChangeRoute(e)} \r\n        className={`d-flex my-2 p-4 justify-content-between ${styles.device}`}>\r\n            <Image \r\n                className=\"d-block\" \r\n                height={160} \r\n                width={160}\r\n                src={ process.env.REACT_APP_API_URL + device.img} \r\n                alt=\"Device\"\r\n            />\r\n            <div className=\"ms-2 w-75\"> \r\n                <h4> {device.name} </h4>\r\n            </div>\r\n            <div className=\"d-flex flex-column align-items-end\">\r\n                <div className=\"mb-3 d-flex flex-column mb-0\">\r\n                    <p className=\"mb-0 float-end text-end\">Цена:</p>\r\n                    <p className=\"mb-0 fs-5 float-end text-end\"><b>{device.price} ₽</b></p>\r\n                </div>\r\n                <div className=\"mb-0 d-flex flex-column align-items-end\">\r\n                    <p className=\"mb-0 float-end\">Рейтинг:</p>\r\n                    <p className=\"fs-5 float-end mb-0\" onClick={cancelBubble}>\r\n                        <Rating \r\n                            readonly\r\n                            initialRating={device.rating}\r\n                            \r\n                            fullSymbol={<img  src={fullStar} alt='Full star' />}\r\n                            emptySymbol={<img src={emptyStar} alt='Empty Star' />}\r\n                        /> \r\n                    </p>\r\n                </div>\r\n                <div onClick={(e)=> handleAddToCart(e)}>\r\n                    <Button  \r\n                        variant={inCart? \"success\": \"info\"}\r\n                        className={styles.toCart}\r\n                    >\r\n                            <span> {inCart ? \"Добавлено в корзину!\" : \"Добавить в корзину\"}  </span>\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n \r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const SuccessMessage = ({\r\n    show, onHide\r\n}) => {\r\n    const history = useHistory()\r\n    return (\r\n        <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Вы успешно создали заказ!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            Найти информацию о ваших заказах вы можете на {' '}\r\n            <Link to=\"/purchases\">\r\n               странице заказов!\r\n            </Link>\r\n \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"outline-primary\" onClick={()=> history.push('/')}>На главную</Button>\r\n            <Button variant=\"primary\" onClick={() => history.push('/purchases')}>На страницу заказов</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Alert, Button, Col, Container, Form, Row, Spinner } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Context } from '../..'\r\nimport { fetchCart, removeFromCart } from '../../http/cartAPI'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { fetchOneDevice } from '../../http/deviceAPI'\r\nimport { DeviceItem } from '../../components/DeviceItem'\r\nimport { addToPurchase } from '../../http/purchaseAPI'\r\nimport { SuccessMessage } from '../../components/modals/SuccessMessage'\r\n\r\nconst Cart = observer(() => {\r\n    const history = useHistory()\r\n    const {cart, user} = useContext(Context)\r\n    const [isLoading, setIsLoading] = React.useState(true)\r\n    const [devices, setDevices] = React.useState([])\r\n    const [message, setMessage] = React.useState('')\r\n\r\n    const [isSuccess, setIsSuccess] = React.useState(false)\r\n\r\n    const loadData = async () => {\r\n        if (!user.isAuth){\r\n            return setIsLoading(false)\r\n        } \r\n        setIsLoading(true)\r\n        const newCart = await fetchCart()\r\n        cart.setCart(newCart)\r\n        await Promise.all(\r\n            cart.cart.map(async ({deviceId}) => {\r\n                const device = await fetchOneDevice(deviceId)\r\n                setDevices(prev => [...prev, {...device, count: 1}])\r\n            })\r\n        )\r\n        setIsLoading(false)\r\n  \r\n        \r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        setDevices([])\r\n        loadData()\r\n    },[])\r\n\r\n    \r\n\r\n    React.useEffect(()=>{\r\n        const filteredDevices = devices.filter(cartDevice => \r\n            cart.cart.find(c => \r\n                c.deviceId===cartDevice.id    \r\n            )\r\n        )\r\n        setDevices(filteredDevices)\r\n    },[cart.cart])\r\n\r\n    console.log(cart.cart);\r\n\r\n    const handleCheckout = async () => {\r\n        setMessage('')\r\n        try {\r\n            devices.forEach(device => {\r\n                if (device.count <= 0) {\r\n                    throw new Error('Количество устройств должно быть больше нуля!')\r\n                }\r\n            })\r\n        } catch (e) {\r\n            setMessage( e.message )\r\n           return\r\n        }  \r\n        try {\r\n            await Promise.all(\r\n                devices.map( device =>\r\n                    addToPurchase(device.id, device.count)\r\n                )\r\n            )\r\n        } catch (e) {\r\n   \r\n            setMessage( e.response?.data.message )\r\n            return\r\n        }\r\n\r\n        await Promise.all(\r\n            devices.map( device =>\r\n                removeFromCart(device.id)\r\n            )\r\n        )\r\n        setIsSuccess(true)\r\n        setDevices([])\r\n    \r\n    }\r\n\r\n    const handleCount = (id, value) => {\r\n        setDevices(prev => \r\n            prev.map(device => \r\n                ({...device, ...(device.id === id && {count: value}) })\r\n            )\r\n        )\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row className=\"h-100 d-flex flex-column justify-content-center\">\r\n                <h2 className=\"text-center\"> Ваша корзина </h2>\r\n            </Row>\r\n            {!user.isAuth &&\r\n                <Alert variant=\"warning\" className=\"text-center w-50 mx-auto\">\r\n                    Чтобы увидеть содержимое корзины, авторизируйтесь!\r\n                </Alert>\r\n            }\r\n            {isLoading \r\n            ? <Row>\r\n                    Идет загрузка...  \r\n                </Row>\r\n            : !cart.cart.length\r\n                ?  <Row>\r\n                        <p className=\"text-center\"> Ваша корзина пуста! Добавьте что-нибудь в вашу корзину, чтобы увидеть ее содержимое</p>\r\n                        <Button  className=\" m-auto\" onClick={()=>history.push('/')} size=\"lg\" variant=\"info\" >\r\n                            Вернуться к покупкам\r\n                        </Button>\r\n                    </Row>\r\n                :   <Container fluid=\"sm\"  className=\"d-flex flex-column justify-content-center\" >\r\n                        {devices.map(device => \r\n                            <Col key={device.id} md={9} className=\"m-auto\">\r\n                                <h4 className=\"text-end\">\r\n                                    Количество: \r\n                                    <Form.Control \r\n                                        value={device.count} \r\n                                        className=\" d-inline text-center ms-2\"\r\n                                        style={{width: \"70px\"}}\r\n                                        type=\"number\"\r\n                                        max={999}\r\n                                        min={1}\r\n                                        onChange={(e) => handleCount(device.id, e.target.value)}\r\n                                    />\r\n                                </h4>\r\n                                <DeviceItem  device={device}/>\r\n                            </Col>\r\n                        )}\r\n                        <Button \r\n                            size=\"lg w-25 mt-3 mx-auto\"\r\n                            onClick={handleCheckout} \r\n                        >\r\n                            Оформить заказ\r\n                        </Button>\r\n\r\n                        {message.length > 0\r\n                            && <Alert className=\"text-center mt-3\" variant=\"warning\">{message}</Alert>\r\n                        }\r\n                        <SuccessMessage show={isSuccess} onHide={()=>history.push('/')}/>\r\n                    </Container>\r\n\r\n                   \r\n              \r\n            }\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Context } from \"../../\"\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport styles from './Catalog.module.scss'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst CatalogTypes = observer( () => {\r\n    const {type} = React.useContext(Context)\r\n    const history = useHistory()\r\n  \r\n    return (\r\n        <div className={`d-flex flex-column ${styles.catalog}`}>\r\n            {type.types.map((t) =>\r\n                \r\n                <p \r\n                    key={t.id} \r\n                    className={`fs-5 p-2 m-0 ${styles.catalogItem}`}\r\n                    onClick = {() => history.push(`/catalog/${t.name}`)}\r\n                >\r\n                    {t.name}\r\n                </p>\r\n             \r\n            )}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CatalogTypes\r\n\r\n\r\n\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Context } from '..'\r\nimport { DeviceItem } from './DeviceItem'\r\n\r\nconst DeviceList = observer(() => {\r\n    const {device} = React.useContext(Context)\r\n    return (\r\n        <div className=\"d-flex flex-column p-3 mt-4\">\r\n            {device?.devices?.map( device => \r\n                <DeviceItem key={device.id} device={device}/>\r\n             )}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default DeviceList\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport Pagination from 'react-bootstrap/esm/Pagination'\r\nimport { Context } from '..'\r\n\r\nconst Pages = observer(() => {\r\n    const {device} =  React.useContext(Context)\r\n    const [pageCount, setPageCount] = React.useState(0)\r\n    const [pages, setPages] = React.useState([])\r\n\r\n    React.useEffect(()=>{\r\n        setPages(Array(pageCount).fill().map((_, i) => i+1))\r\n    },[device, device.devices, pageCount])\r\n\r\n    React.useEffect(()=>{\r\n        setPageCount(Math.ceil(device.totalCount / device.limit))\r\n    },[device.limit, device.totalCount, pageCount])\r\n\r\n\r\n    return (\r\n        <Pagination className=\"mt-3 ms-3\">\r\n\r\n            {pages.map(page => \r\n                <Pagination.Item\r\n                    activeLabel=\"\"\r\n                    key={page}\r\n                    active={device.page === page}\r\n                    onClick={()=> {\r\n                        device.setPage(page)\r\n                        window.scrollTo(0, 0)\r\n                    }}\r\n                >\r\n                    {page}\r\n                </Pagination.Item>    \r\n            )}\r\n     \r\n        </Pagination>\r\n    )\r\n})\r\n\r\nexport default Pages\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Col from 'react-bootstrap/esm/Col';\r\nimport Container from 'react-bootstrap/esm/Container';\r\nimport Row from 'react-bootstrap/esm/Row';\r\nimport { Context } from '../..';\r\nimport Catalog from '../../components/Catalog';\r\nimport DeviceList from '../../components/DeviceList';\r\nimport Pages from '../../components/Pages';\r\nimport { fetchCart } from '../../http/cartAPI';\r\nimport { fetchDevices } from '../../http/deviceAPI';\r\n\r\n\r\nconst Main = observer(() => {\r\n    const {device, cart} = React.useContext(Context) \r\n\r\n    React.useEffect(() => {\r\n        fetchCart().then(data => {\r\n            cart.setCart(data)\r\n        })\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        fetchCart().then(data => {\r\n            cart.setCart(data)\r\n        })\r\n        fetchDevices(device.page, device.limit).then(data =>{\r\n            console.log( device.page, device.limit)\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n      \r\n    }, [device, device.page, device.typeId])\r\n\r\n\r\n    return (\r\n            <Container>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <h4 >Категории товаров</h4>\r\n                    <Catalog/>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <h4>Список всех товаров</h4>\r\n                    <DeviceList />\r\n                    <Pages />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n})\r\n    \r\n    export default Main\r\n    \r\n\r\n\r\n","import { $authHost, $host } from \".\";\r\nimport jwt_decode from 'jwt-decode'\r\n\r\n\r\nexport const registration = async (email, password) => {\r\n    const {data} = await $host.post('api/user/registration', {email, password})\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const {data} = await $host.post('api/user/login', {email, password})\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}\r\n\r\nexport const check = async () => {\r\n    const {data}  = await $authHost.get('api/user/auth')\r\n    localStorage.setItem('token', data.token)\r\n    return jwt_decode(data.token)\r\n}","import React from 'react';\r\nimport Container from 'react-bootstrap/esm/Container';\r\nimport Form from 'react-bootstrap/esm/Form';\r\nimport Card from 'react-bootstrap/esm/Card';\r\nimport Row from 'react-bootstrap/esm/Row';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport { NavLink, useHistory, useLocation } from 'react-router-dom';\r\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from '../../utils/consts';\r\n\r\nimport styles from './Auth.module.scss'\r\nimport { login, registration } from '../../http/userAPI';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../..';\r\n\r\nconst Auth = observer( () => {\r\n        const location = useLocation()\r\n        const isLogin = location.pathname === LOGIN_ROUTE\r\n        const history = useHistory()\r\n        const {user} = React.useContext(Context)\r\n\r\n        const [email, setEmail] = React.useState('')\r\n        const [password, setPassword] = React.useState('')\r\n\r\n        const onAuth = async () => {\r\n            let data\r\n            try {\r\n                if (isLogin) {\r\n                     data = await login(email, password);\r\n                } else {\r\n                     data = await registration(email, password);\r\n                }\r\n                user.setUser(data)\r\n                user.setIsAuth(true)\r\n                if (data.role === 'ADMIN') {\r\n                    user.setIsAdmin(true)\r\n                }\r\n                history.push(SHOP_ROUTE)\r\n            } catch(err) {\r\n                alert(err.response ? err.response.data.message: err)\r\n            }\r\n        }\r\n        return (\r\n        <Container \r\n            className=\"d-flex justify-content-center align-items-center mt-5\"\r\n        >\r\n            <Card className='p-3'>\r\n                <h2 className=\"text-center\"> {isLogin ? 'Авторизация' : 'Регистрация'}   </h2>\r\n                <Form className={`p-2 ${styles.auth}`}>\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите вашу электронную почту\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш пароль\"\r\n                        value={password}\r\n                        type=\"password\"\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    <Button \r\n                        className={`mt-2 w-100 ${styles.confirm}`}\r\n                        onClick={onAuth}\r\n                    >\r\n                        {isLogin ? \r\n                                'Войти'\r\n                        :\r\n                                'Зарегистрироваться'\r\n                        }\r\n                    </Button>  \r\n                </Form>\r\n                <Row className=\"d-flex justify-content-between mt-1  \">\r\n                   {isLogin ? \r\n                        <div>\r\n                                Если у вас нет аккаунта, <NavLink to={REGISTRATION_ROUTE}>зарегистрируйтесь</NavLink>!       \r\n                        </div>  \r\n                        :\r\n                        <div>\r\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите</NavLink>!       \r\n                        </div>  \r\n                   } \r\n                  \r\n\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n        )});\r\n\r\nexport default Auth;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Col from 'react-bootstrap/esm/Col'\r\nimport Container from 'react-bootstrap/esm/Container'\r\nimport Row from 'react-bootstrap/esm/Row'\r\nimport Image from 'react-bootstrap/esm/Image'\r\nimport Button from 'react-bootstrap/esm/Button'\r\n\r\nimport styles from './Device.module.scss'\r\n\r\nimport {useParams}  from 'react-router-dom'\r\nimport { fetchOneDevice, rateDevice } from '../../http/deviceAPI'\r\n\r\nimport Rating from 'react-rating'\r\nimport fullStar from '../../assets/fullStar.svg'\r\nimport emptyStar from '../../assets/emptyStar.svg'\r\nimport { Context } from '../..'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\n\r\n// add loading state\r\nconst Device = observer(() => {\r\n    const [device, setDevice] = React.useState({info:[]})\r\n    const [inCart, setInCart] = React.useState(false)\r\n    const [rateMessage, setRateMessage] = React.useState(\r\n        'Чтобы оценить устройство, просто кликните на одну из звезд!'\r\n    )\r\n    const {id} = useParams()\r\n    const {cart} = React.useContext(Context)\r\n\r\n\r\n    console.log(cart.cart);\r\n    React.useEffect(()=>{\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        if (device?.id) {\r\n            setInCart(cart.checkInCart(device.id))\r\n        }\r\n     },[cart, cart.cart, device])\r\n\r\n    const handleAddToCart = async (e) => {\r\n        await cart.toggleItem(device.id)\r\n    }\r\n\r\n\r\n    const handleRate = async (value) => {\r\n        setRateMessage('Устройство оценено!')\r\n        //await rating set\r\n        await rateDevice(device.id, value)\r\n        // again fetching device for rerender rating\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }\r\n\r\n    const renderRatingTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            {rateMessage}\r\n        </Tooltip>\r\n      );\r\n\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row>\r\n                <h1 className=\"ms-3\"> <b>{device.name}</b> </h1>\r\n            </Row>\r\n            <Row>\r\n                <Col  className=\"mb-4\" lg={4}>\r\n                    <Image \r\n                        className={`m-auto d-block ${styles.rounded}`} \r\n                        width={300} height={300} \r\n                        src={device.img && (process.env.REACT_APP_API_URL + device.img)}  \r\n                    />\r\n                </Col>\r\n                <Col lg={8}>\r\n                   \r\n                    <div className={`p-4 ${styles.descriptionBox} d-flex flex-column`}>\r\n                        <div className=\"d-flex justify-content-between align-items-end\">\r\n                            <h3> Описание </h3>\r\n                            <OverlayTrigger\r\n                                placement=\"top-end\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={renderRatingTooltip}\r\n                            >\r\n                            <h5> Рейтинг:\r\n                                <span className={`${styles.rating} fs-5 ms-2`}> \r\n\r\n                                <Rating \r\n                                    initialRating={device?.rating} \r\n                                    fullSymbol={<img  src={fullStar} alt='Full star' />}\r\n                                    emptySymbol={<img src={emptyStar} alt='Empty Star' />}\r\n                                    onClick={handleRate}\r\n                                    \r\n                                    />  \r\n                                    <span className=\"ms-1\">\r\n                                        {Number(device?.rating).toFixed(2)} \r\n                                    </span>\r\n                                </span> \r\n                            </h5>\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                        <p className=\"fs-5 p-2 overflow-auto mt-2\">{device.deviceDescription }</p>\r\n                        <div className=\"d-flex mt-auto align-items-end flex-column\">\r\n                            <p >Цена: <b className=\"ms-2\">{device.price}  ₽</b></p>\r\n                            <Button \r\n                                onClick={handleAddToCart} \r\n                                variant={inCart? \"success\": \"info\"}\r\n                                className={styles.toCart}\r\n                            >\r\n                            <span> {inCart ? \"Добавлено в корзину!\" : \"Добавить в корзину\"}  </span>\r\n                    </Button>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"px-2 mt-3\">\r\n                <div className={`p-4 ${styles.descriptionBox} d-flex flex-column h-100`}>\r\n                    <h3> Характеристики </h3>\r\n                    {device.info.map( (info, id)=> \r\n                        <div key={id}>\r\n                            <div className=\"d-flex \">\r\n                                <div className={`fs-4 ${styles.descriptionName}`}>\r\n                                    {info.title}\r\n                                </div> \r\n                                <div className={`fs-4 ${styles.descriptionValue}`}>\r\n                                    {info.description}\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    )}\r\n \r\n\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Device\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Col, Row, Form } from 'react-bootstrap'\r\nimport { Context } from '../..'\r\nimport { fetchDevices } from '../../http/deviceAPI'\r\nimport styles from './Settings.module.scss'\r\n\r\nconst sortOptions = [\r\n    {label: 'Цене', value: \"price\"},\r\n    {label: 'Рейтингу', value: \"rating\"},\r\n    {label: 'Дате выхода', value: \"createdAt\"},\r\n]\r\n\r\nexport const Settings = observer(({\r\n    typeId, setLoading\r\n}) => {\r\n\r\n    const { brand, device } = React.useContext(Context)\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [minPrice, setMinPrice] = React.useState(0)\r\n    const [maxPrice, setMaxPrice] = React.useState(100000)\r\n    const [selectedBrands, setSelectedBrands] = React.useState([])\r\n    const [minRating, setMinRating] = React.useState(0)\r\n    const [sortOption, setSortOption] = React.useState('price')\r\n    const [isDesc, setIsDesc] = React.useState(false)\r\n\r\n    React.useEffect(()=>{\r\n        device.setDevices([])\r\n        setLoading(true)\r\n        fetchDevices(\r\n            device.page, \r\n            device.limit,\r\n            name, \r\n            minPrice,\r\n            maxPrice,\r\n            selectedBrands,\r\n            [typeId],\r\n            minRating, \r\n            sortOption,\r\n            isDesc\r\n        ).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        }).finally(\r\n            setLoading(false)\r\n        )\r\n    },[name, minPrice, maxPrice, selectedBrands, minRating, device, typeId, setLoading, sortOption, isDesc, device.page])\r\n\r\n\r\n\r\n    const handleChangeSelectedBrands = (e) => {\r\n        const options = e.target.options;\r\n        const brands = [];\r\n        for (let i = 0, l = options.length; i < l; i++) {\r\n          if (options[i].selected) {\r\n            brands.push(options[i].value);\r\n          }\r\n        }\r\n        setSelectedBrands(brands)\r\n    }\r\n\r\n    console.log(isDesc);\r\n\r\n    return (\r\n        <>\r\n            <h4> Настройки </h4>\r\n            <Form className={styles.settings}>\r\n                <Form.Group>\r\n                    <Form.Label> Название </Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Поиск по названию...\"\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}  \r\n                    />\r\n                </Form.Group>\r\n                <hr />\r\n                <Row>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Минимальная цена</Form.Label>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            value={minPrice}\r\n                            onChange={(e)=> setMinPrice(e.target.value)}  \r\n                        />\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Максимальная цена</Form.Label>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            value={maxPrice}\r\n                            onChange={(e)=> setMaxPrice(e.target.value)} \r\n                        />\r\n                    </Form.Group>\r\n                </Row>\r\n                <hr />\r\n                <Form.Group>\r\n                    <Form.Label> Бренд </Form.Label>\r\n                    <Form.Control \r\n                        as=\"select\" \r\n                        multiple \r\n                        type=\"text\" \r\n                        onChange={handleChangeSelectedBrands}\r\n                        values={brand.brands}\r\n                        // value={brand.brands}\r\n                    >\r\n                        {brand.brands.map(b => \r\n                            <option key={b.id} value={b.id}>\r\n                                {b.name}\r\n                            </option>\r\n                        )}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <hr />\r\n                <Form.Group>\r\n                    <Form.Label className=\"d-flex\">Минимальный рейтинг</Form.Label>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        0\r\n                        <Form.Control \r\n                            value={minRating}  \r\n                            min={0} \r\n                            max={5}\r\n                            step={0.1} \r\n                            className=\"w-100 mx-3\" \r\n                            type=\"range\" \r\n                            onChange={e=> setMinRating(e.target.value)}\r\n                         />\r\n                        5\r\n                        <Form.Control value={minRating}  onChange={e=> setMinRating(e.target.value)} min={0} max={5} className=\"w-25 ms-3\" type=\"number\"/>\r\n                    </div>\r\n                </Form.Group>\r\n                <hr />\r\n                <Form.Group>\r\n                  \r\n                    <Form.Label> Сортировать по </Form.Label>\r\n                   \r\n                    <Form.Control \r\n                        as=\"select\" \r\n                        \r\n                        type=\"text\" \r\n                        onChange={(e) => setSortOption(e.target.value)}\r\n                        values={sortOptions.map(opt => opt.label)}\r\n                        // value={brand.brands}\r\n                    >\r\n                        {sortOptions.map((opt, it) => \r\n                        <option key={it} value={opt.value}>\r\n                                {opt.label}\r\n                            </option>\r\n                        )}\r\n                    </Form.Control>\r\n\r\n                    <Form.Check\r\n                        name=\"radio\"\r\n                        type=\"radio\"\r\n                        label=\"По убыванию\"\r\n                        id={`desc`}\r\n                        onClick={()=> setIsDesc(true)}\r\n                    />\r\n                    <Form.Check\r\n                        name=\"radio\"\r\n                        type=\"radio\"\r\n                        label=\"По возрастанию\"\r\n                        id={`asc`}\r\n                        onClick={()=> setIsDesc(false)}\r\n                    />\r\n\r\n                </Form.Group>\r\n            </Form>\r\n        </>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Row, Col, Container, Spinner, Alert } from 'react-bootstrap';\r\nimport { useParams } from 'react-router';\r\nimport { Context } from '../..';\r\nimport DeviceList from '../../components/DeviceList';\r\nimport Pages from '../../components/Pages';\r\nimport { Settings } from '../../components/Settings';\r\n\r\n\r\nexport const CatalogPage = observer(() => {\r\n    const { type, device } = React.useContext(Context)\r\n    \r\n    const [typeId, setTypeId] = React.useState()\r\n    const [isLoading, setIsLoading] = React.useState(true)\r\n    const { id } = useParams();\r\n    React.useEffect(()=>{\r\n        const t = type.types.find(t => t.name === id)\r\n        if (t) {\r\n            setTypeId(t.id)\r\n        }\r\n\r\n    },[type.types, id])\r\n\r\n    return (\r\n        <Container>\r\n            <Row >\r\n                <Col md=\"4\" sm=\"12\" >\r\n                    {typeId && \r\n                        <Settings typeId={typeId} setLoading={setIsLoading} />\r\n                    }\r\n                </Col>\r\n                <Col xs=\"12\" sm=\"12\" md=\"8\" >\r\n                    <h4>Устройства категории: {id} </h4>\r\n                    {isLoading \r\n                        ? <Spinner animation=\"grow\" />\r\n                        : <> \r\n                            {device.devices.length > 0\r\n                            ? <DeviceList />\r\n                            : <Alert variant=\"warning\">Товары в данной категории отсутсвуют!</Alert>\r\n                            }\r\n                            \r\n                            <Pages />\r\n                          </>\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n})\r\n","import Admin from \"./pages/Admin\"\r\nimport Cart from \"./pages/Cart\"\r\nimport Main from \"./pages/Main\"\r\nimport Auth from \"./pages/Auth\"\r\nimport Device from \"./pages/Device\"\r\n\r\nimport {ADMIN_ROUTE, CART_ROUTE, CATALOG_ROUTE, CONTACTS_ROUTE, DEVICE_ROUTE, LOGIN_ROUTE, PURCHASES_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from './utils/consts'\r\nimport { Contacts } from \"./pages/Contacts\"\r\nimport { CatalogPage } from \"./pages/CatalogPage\"\r\nimport { Purchases } from \"./pages/Purchases\"\r\n\r\n// pages, for only auth. users\r\nexport const authRoutes = [ \r\n    {\r\n        path: ADMIN_ROUTE, \r\n        Component: Admin\r\n    }\r\n]  \r\n\r\n// pages, for all users\r\nexport const publicRoutes = [\r\n    {\r\n        path: SHOP_ROUTE, \r\n        Component: Main\r\n    }, \r\n\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n\r\n    {\r\n        path: REGISTRATION_ROUTE, \r\n        Component: Auth\r\n    },\r\n\r\n    {\r\n        path: DEVICE_ROUTE + '/:id',\r\n        Component: Device\r\n    },\r\n\r\n    {\r\n        path: CONTACTS_ROUTE,\r\n        Component: Contacts\r\n    },\r\n\r\n    {\r\n        path: CATALOG_ROUTE + '/:id',\r\n        Component: CatalogPage\r\n    },\r\n\r\n    {\r\n        path: PURCHASES_ROUTE ,\r\n        Component: Purchases\r\n    },\r\n    {\r\n        path: CART_ROUTE,\r\n        Component: Cart\r\n    }\r\n\r\n    \r\n    \r\n]  ","import React from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nexport const Contacts = () => {\r\n    return (\r\n        <Container>\r\n            <Row  className=\"mt-5\">\r\n                <h2 className=\"text-center\">Контакты</h2>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n                <p className=\"text-center \">\r\n                    Для получения справочной информации, звоните по номеру <span className=\"fs-5\"><b> +7 (777) 77-77-77  </b></span>  \r\n                </p>\r\n                \r\n            </Row>\r\n            <Row>\r\n                <p className=\"text-center\">\r\n                    Наша почта  <span className=\"fs-5\" ><b>nikogra@gmail.com </b></span>\r\n                </p>\r\n            </Row>\r\n            <Row>\r\n                <p className=\"text-center\">\r\n                    Команда разработчиков сайта \"<b><i>Bruh team</i></b>\"\r\n                </p>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Container, Row, Alert, Col, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Context } from '../..'\r\nimport { DeviceItem } from '../../components/DeviceItem'\r\nimport DeviceList from '../../components/DeviceList'\r\nimport { fetchOneDevice } from '../../http/deviceAPI'\r\nimport { fetchPurchases } from '../../http/purchaseAPI'\r\n\r\nexport const Purchases = () => {\r\n    const history = useHistory()\r\n    const {user, purchase} = React.useContext( Context )\r\n    const [isLoading, setIsLoading] = React.useState(true)\r\n    const [devices, setDevices] = React.useState([])\r\n\r\n    const loadData = async () => {\r\n        if (!user.isAuth){\r\n            return setIsLoading(false)\r\n        } \r\n        setIsLoading(false)\r\n        const fetchedPurchase = await fetchPurchases()\r\n        console.log(fetchedPurchase);\r\n        purchase.setPurchase(fetchedPurchase)\r\n        await Promise.all(\r\n            purchase.purchases.map(async ({deviceId, id}, it) => {\r\n                const device = await fetchOneDevice(deviceId)\r\n                device.purchaseId = purchase.purchases[it].id\r\n                device.isIssued = purchase.purchases[it].isIssued\r\n                device.count = purchase.purchases[it].count\r\n                setDevices(prev => [...prev, device])\r\n            })\r\n        )\r\n        \r\n        setDevices(prev => [...prev].sort((l, r) => r.purchaseId - l.purchaseId)  \r\n        )\r\n        setIsLoading(false)\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        setDevices([])\r\n        loadData()\r\n    },[])\r\n\r\n    return (\r\n        <Container className=\"mt-5 \">\r\n            <Row className=\"h-100 d-flex flex-column justify-content-center\">\r\n                <h2 className=\"text-center\"> История покупок </h2>\r\n            </Row>\r\n            <Row>\r\n                {!user.isAuth &&\r\n                    <Alert variant=\"warning\" className=\"text-center w-50 mx-auto\">\r\n                        Чтобы увидеть историю покупок, авторизируйтесь!\r\n                    </Alert>\r\n                }\r\n                { isLoading \r\n                    ? <p>Идет загрузка</p>\r\n                    :  devices.length \r\n                        ?   <Row> \r\n                                {devices.map((device, it) => \r\n                                    <Col key={it} md={9} className=\"m-auto mt-2\">\r\n                                        <div className=\"d-flex justify-content-between my-3\" >\r\n                                            <h5>Статус заказа: \r\n                                                <Alert  className=\"d-inline ms-2\" variant={device.isIssued ? 'success' : 'warning'}>\r\n                                                    {device.isIssued? ' Выдан' : ' Не выдан'}\r\n                                                </Alert> \r\n                                            </h5>\r\n                                            <div className=\"d-flex \">\r\n                                                <h5 className=\"text-end\">\r\n                                                   Количество: <b>{device?.count} </b>\r\n                                                </h5>\r\n                                                <h5 className=\"text-end ms-5\">\r\n                                                    Код покупки: <b className=\"text-primary\">{device?.purchaseId} </b>\r\n                                                </h5>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n            \r\n                                        <DeviceItem  device={device}/>\r\n                                    </Col>\r\n                                )}\r\n                            </Row>\r\n                        :   <Row>\r\n                                <p className=\"text-center\"> Ваша история покупок пуста! Совершитее хотя бы одну, чтобы видеть вашу историю</p>\r\n                                <Button className=\"m-auto\" onClick={()=>history.push('/')} size=\"lg\" variant=\"info\" >\r\n                                    Вернуться на главную \r\n                                </Button> \r\n                            </Row>\r\n                }   \r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport { Context } from '..'\r\nimport { authRoutes, publicRoutes } from '../routes'\r\nimport { SHOP_ROUTE } from '../utils/consts'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nconst AppRouter = observer( () => {\r\n    const {user} = React.useContext(Context)\r\n    console.log(user);\r\n    return (\r\n        <Switch>\r\n            {user.isAuth && authRoutes.map(({path, Component}) => \r\n                <Route key={path} path={path} component={Component} exact />\r\n            )}\r\n            {publicRoutes.map(({path, Component}) => \r\n                <Route key={path} path={path} component={Component} exact />\r\n            )}\r\n            <Redirect to={SHOP_ROUTE}/>\r\n        </Switch>\r\n    )\r\n})\r\n\r\nexport default AppRouter\r\n\r\n","export default __webpack_public_path__ + \"static/media/shopping_cart.2d77242d.svg\";","export default __webpack_public_path__ + \"static/media/history.8ad5b03b.svg\";","export default __webpack_public_path__ + \"static/media/contacts.c49cc750.svg\";","export default __webpack_public_path__ + \"static/media/headphones.7a7b174a.svg\";","export default __webpack_public_path__ + \"static/media/phone.d90b4fc6.svg\";","export default __webpack_public_path__ + \"static/media/computer.67165d72.svg\";","import React from 'react'\r\nimport { Context } from '../..'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { ADMIN_ROUTE, CATALOG_ROUTE, LOGIN_ROUTE, SHOP_ROUTE } from '../../utils/consts'\r\nimport {observer} from 'mobx-react-lite'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport styles from './Navigation.module.scss'\r\nimport cartIcon from '../../assets/shopping_cart.svg'\r\nimport historyIcon from '../../assets/history.svg'\r\nimport contactsIcon from '../../assets/contacts.svg'\r\nimport headphonesIcon from '../../assets/headphones.svg'\r\nimport phoneIcon from '../../assets/phone.svg'\r\nimport computerIcon from '../../assets/computer.svg'\r\n\r\n\r\n\r\n const Navigation = observer( () =>  {\r\n    const {user, device} = React.useContext(Context)\r\n \r\n    const history = useHistory()\r\n\r\n    const logout = () => {\r\n        user.clearUser()\r\n    }\r\n\r\n    return (\r\n        <Navbar className={styles.myNav}  expand=\"xl\" variant={'dark'} >\r\n            <Container>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                \r\n                <Nav className=\"justify-content-between w-100\">\r\n                \r\n                    \r\n                    <Link to={`/`}>\r\n                        <Nav.Link as=\"span\" className=\"\" href={`/`}>\r\n                        <Navbar.Brand \r\n                        className={`me-5 ${styles.cursorPointer}`} \r\n                        onClick={() => {\r\n                            history.push(SHOP_ROUTE)\r\n                        }}\r\n                        >\r\n                            A Shop\r\n                        </Navbar.Brand>\r\n                        </Nav.Link>\r\n                    </Link>\r\n                    <Link to={`${CATALOG_ROUTE}/Компьютеры`}>\r\n                        <Nav.Link as=\"span\" className=\"\" href={`${CATALOG_ROUTE}/Компьютеры`}>\r\n                            Компьютеры\r\n                            <img className=\"ms-1\" src={computerIcon} width={24} height={24} alt='' />\r\n                        </Nav.Link>\r\n                    </Link>\r\n                    \r\n                    <Link to={`${CATALOG_ROUTE}/Смартфоны`}>\r\n                        <Nav.Link as=\"span\" href={`${CATALOG_ROUTE}/Смартфоны`}>\r\n                            Смартфоны\r\n                            <img className=\"ms-1\" src={phoneIcon} width={24} height={24} alt='' />\r\n                        </Nav.Link>\r\n                    </Link>\r\n\r\n                    <Link className=\"me-auto\" to={`${CATALOG_ROUTE}/Аксессуары`}>\r\n                        <Nav.Link as=\"span\" href={`${CATALOG_ROUTE}/Аксессуары`}>\r\n                            Аксессуары\r\n                            <img className=\"ms-1\" src={headphonesIcon} width={24} height={24} alt='' />\r\n                        </Nav.Link>\r\n                    </Link>\r\n                    \r\n                    <Link to=\"/contacts\" >\r\n                        <Nav.Link as=\"span\" href=\"/contacts\">\r\n                            Контакты\r\n                            <img className=\"ms-1\" src={contactsIcon} width={24} height={24} alt='' />\r\n                        </Nav.Link>\r\n                    </Link>\r\n                    <Link to=\"/purchases\">\r\n                        <Nav.Link as=\"span\" href=\"/purchases\">\r\n                            История покупок\r\n                            <img className=\"ms-1\" src={historyIcon} width={24} height={24} alt='' />\r\n                        </Nav.Link>\r\n                    </Link>\r\n                   \r\n                    <Link to=\"/cart\">\r\n                        <Nav.Link as=\"span\" className='d-flex' href=\"/cart\">\r\n                            Корзина \r\n                            <img className=\"ms-1\" src={cartIcon} width={24} height={24} alt='' />\r\n                        </Nav.Link>\r\n                    </Link>\r\n                    {user.isAdmin &&  \r\n                     <Button \r\n                        onClick={() => history.push(ADMIN_ROUTE)} \r\n                        variant=\"outline-info\"\r\n                        className={`mx-2 mb-1`}\r\n                     >\r\n                         Админ\r\n                     </Button>\r\n                    }\r\n                    {user.isAuth ? \r\n                            <Button  \r\n                                onClick={() => logout()}  \r\n                                // className={styles.authButton}\r\n                                variant=\"outline-info\"\r\n                                className={`mx-2 mb-1`}\r\n                            >\r\n                                Выйти</Button>\r\n                    :\r\n                            <Button \r\n                                onClick={() => history.push(LOGIN_ROUTE)} \r\n                                className={styles.authButton}\r\n                            >\r\n                                Авторизация\r\n                            </Button>\r\n                    }\r\n                 \r\n                </Nav>\r\n                \r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n})\r\n\r\nexport default Navigation\r\n","import React from 'react'\n\nimport { observer } from \"mobx-react-lite\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Context } from \".\"\nimport AppRouter from \"./components/AppRouter\"\nimport Navigation from \"./components/Navigation\"\nimport { check } from './http/userAPI'\nimport Spinner from 'react-bootstrap/esm/Spinner'\nimport { fetchTypes } from './http/typeAPI'\nimport { fetchBrands } from './http/brandAPI'\nimport { fetchDevices } from './http/deviceAPI'\nimport { fetchCart } from './http/cartAPI'\n\nconst App = observer (() => {\n  const {user, type, brand, device, cart} = React.useContext(Context)\n  const [loading, setLoading] = React.useState(true)\n  \n  const fetchDefault = async () => {\n    try {\n      const data  = await check()\n      user.setUser(data)\n      user.setIsAuth(true) \n      if (data.role === 'ADMIN') {\n        user.setIsAdmin(true)\n      }\n    } catch (e) {\n      user.setIsAuth(false)\n    }\n    await fetchData()\n    setLoading(false)\n  }\n\n  const fetchData = async () => {\n    await Promise.all([\n      fetchTypes().then((data) => type.setTypes(data)),\n      fetchBrands().then(data => brand.setBrands(data)),\n      user.isAuth&&fetchCart().then((data)=> cart.setCart(data))\n    ])\n   \n  }\n  console.log(\"API URL\");\n  console.log(process.env.REACT_APP_API_URL);\n  React.useEffect( () =>{\n    // check().then(data => {\n    //   user.setUser(data)\n    //   user.setIsAuth(true) \n    //   if (data.role === 'ADMIN') {\n    //     user.setIsAdmin(true)\n    //   }\n    // })\n    \n    setLoading(true)\n    fetchDefault()\n    // Promise.all([\n    //   fetchTypes().then((data) => type.setTypes(data)),\n    //   fetchBrands().then(data => brand.setBrands(data)),\n    //   user.isAuth&&fetchCart().then((data)=> cart.setCart(data))\n    // ]).then(setLoading(false))\n      // fetchTypes().then((data) => type.setTypes(data))\n      // fetchBrands().then(data => brand.setBrands(data))\n      // if (user.isAuth) {\n      //   fetchCart().then((data)=> cart.setCart(data))\n      // }\n \n  } , [user, type, brand, device, cart]) \n\n  if (loading) {\n    return <Spinner animation={\"grow\"} />\n  }\n\n  return (\n    <BrowserRouter >\n      <Navigation />\n      <AppRouter />\n    </BrowserRouter>\n  );\n})\n\nexport default App;\n","import {makeAutoObservable} from \"mobx\";\r\n \r\nexport default class UserStore {\r\n    constructor() {\r\n        this._isAuth = false\r\n        this._user = {}\r\n        this._isAdmin = false\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    clearUser(){\r\n        this._isAuth = false\r\n        this._user = {}\r\n        this._isAdmin = false\r\n        localStorage.clear()\r\n    }\r\n\r\n    setIsAuth(val){\r\n        this._isAuth=val\r\n    }\r\n\r\n    setIsAdmin(isAdmin){\r\n        this._isAdmin=isAdmin\r\n    }\r\n    \r\n    setUser(user){\r\n        this._user=user\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth\r\n    }\r\n\r\n    get isAdmin() {\r\n        return this._isAdmin\r\n    }\r\n\r\n    get user() {\r\n        return this._user\r\n    }\r\n\r\n};\r\n","import {makeAutoObservable} from \"mobx\";\r\n\r\nexport default class DeviceStore {\r\n    constructor() {\r\n        this._devices = []\r\n        this._typeId = null\r\n        this._page = 1\r\n        this._totalCount = 1\r\n        this._limit = 5\r\n\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    reset(){\r\n        this._devices = []\r\n        this._typeId = null\r\n        this._page = 1\r\n        this._totalCount = 1\r\n        this._limit = 5\r\n    }\r\n\r\n    setPage(page){\r\n        this._page = page\r\n    }\r\n\r\n    setTotalCount(totalCount){\r\n        this._totalCount = totalCount\r\n    }\r\n\r\n    setLimit(limit){\r\n        this._limit=limit\r\n    }\r\n\r\n    setTypeId(typeId){\r\n        this._typeId=typeId\r\n    }\r\n\r\n    setDevices(devices){\r\n        this._devices=devices\r\n        console.log(this._devices);\r\n    }\r\n\r\n    get devices() {\r\n        return this._devices\r\n    }\r\n\r\n    get totalCount() {\r\n        return this._totalCount\r\n    }\r\n\r\n    get page() {\r\n        return this._page\r\n    }\r\n\r\n    get limit(){\r\n        return this._limit\r\n    }\r\n\r\n    get typeId() {\r\n        return this._typeId\r\n    }\r\n};\r\n","import {makeAutoObservable} from \"mobx\";\r\n \r\nexport default class TypeStore {\r\n    constructor() {\r\n        this._types = []\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setTypes(types){\r\n        this._types=types\r\n    }\r\n\r\n    get types() {\r\n        return this._types\r\n    }\r\n};","import {makeAutoObservable} from \"mobx\";\r\n \r\nexport default class BrandStore {\r\n    constructor() {\r\n        this._brands = []\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setBrands(brands){\r\n        this._brands=brands\r\n    }\r\n\r\n    get brands() {\r\n        return this._brands\r\n    }\r\n};","import {makeAutoObservable} from \"mobx\";\r\nimport { addToCart, fetchCart, removeFromCart } from \"../http/cartAPI\";\r\n \r\nexport default class CartStore {\r\n    constructor() {\r\n        this._cart = []\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setCart(cart){\r\n        this._cart=cart\r\n    }\r\n\r\n    checkInCart(id) {\r\n        return !!this._cart.find((item)=>item.deviceId === id)\r\n    }\r\n\r\n    async toggleItem(id) {\r\n        if (!this.checkInCart(id)) {\r\n            await addToCart(id)\r\n        } else {\r\n            await removeFromCart(id)\r\n        }\r\n        this.setCart(await fetchCart())\r\n    }\r\n\r\n    get cart() {\r\n        return this._cart\r\n    }\r\n};","import {makeAutoObservable} from \"mobx\";\r\n\r\nexport default class PurchaseStore {\r\n    constructor() {\r\n        this._purchase = []\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setPurchase(purchase){\r\n        this._purchase=purchase\r\n    }\r\n\r\n    get purchases() {\r\n        return this._purchase\r\n    }\r\n};","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport UserStore from './store/UserStore';\nimport DeviceStore from './store/DeviceStore';\nimport TypeStore from './store/TypeStore';\nimport BrandStore from './store/BrandStore';\nimport CartStore from './store/CartStore';\nimport './index.scss'\nimport PurchaseStore from './store/PurchaseStore';\n\nexport const Context = createContext(null)\n\nReactDOM.render(\n    <Context.Provider value={{\n      user: new UserStore(),\n      device: new DeviceStore(),\n      type: new TypeStore(),\n      brand: new BrandStore(),\n      cart: new CartStore(),\n      purchase: new PurchaseStore()\n    }}>\n      <App />\n    </Context.Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBox\":\"Device_descriptionBox__28c6U\",\"rounded\":\"Device_rounded__KP9T4\",\"rating\":\"Device_rating__35eP0\",\"toCart\":\"Device_toCart__2B9QO\",\"descriptionName\":\"Device_descriptionName__1GemN\",\"descriptionValue\":\"Device_descriptionValue__14PAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myNav\":\"Navigation_myNav__y944h\",\"authButton\":\"Navigation_authButton__2QH80\",\"cursorPointer\":\"Navigation_cursorPointer__1IvVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"device\":\"DeviceItem_device__3mfpa\",\"toCart\":\"DeviceItem_toCart__QGXTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog\":\"Catalog_catalog__285Ib\",\"catalogItem\":\"Catalog_catalogItem__1H-zM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3F2O3\",\"confirm\":\"Auth_confirm__1lqII\"};"],"sourceRoot":""}